/* tslint:disable */
/* eslint-disable */
/**
 * Golden Fleece API
 * A simple REST API for providing basic CRUD-access to the employees in a Golden Fleece database.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RoomInfo
 */
export interface RoomInfo {
    /**
     * title of room.
     * @type {string}
     * @memberof RoomInfo
     */
    title: string;
    /**
     * short description of room.
     * @type {string}
     * @memberof RoomInfo
     */
    description: string;
    /**
     * long description of room.
     * @type {string}
     * @memberof RoomInfo
     */
    descriptionLong: string;
}

/**
 * Check if a given object implements the RoomInfo interface.
 */
export function instanceOfRoomInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "descriptionLong" in value;

    return isInstance;
}

export function RoomInfoFromJSON(json: any): RoomInfo {
    return RoomInfoFromJSONTyped(json, false);
}

export function RoomInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'],
        'descriptionLong': json['descriptionLong'],
    };
}

export function RoomInfoToJSON(value?: RoomInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'description': value.description,
        'descriptionLong': value.descriptionLong,
    };
}

