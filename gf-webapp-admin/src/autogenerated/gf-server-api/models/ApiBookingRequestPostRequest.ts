/* tslint:disable */
/* eslint-disable */
/**
 * Golden Fleece API
 * A simple REST API for providing basic CRUD-access to the employees in a Golden Fleece database.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiBookingRequestPostRequest
 */
export interface ApiBookingRequestPostRequest {
    /**
     * customers email
     * @type {string}
     * @memberof ApiBookingRequestPostRequest
     */
    email: string;
    /**
     * customers name
     * @type {string}
     * @memberof ApiBookingRequestPostRequest
     */
    name: string;
    /**
     * check in date yyyy-mm-dd
     * @type {string}
     * @memberof ApiBookingRequestPostRequest
     */
    dateIn: string;
    /**
     * check out date yyyy-mm-dd
     * @type {string}
     * @memberof ApiBookingRequestPostRequest
     */
    dateOut: string;
    /**
     * room number
     * @type {number}
     * @memberof ApiBookingRequestPostRequest
     */
    roomNumber: number;
    /**
     * adults amount
     * @type {number}
     * @memberof ApiBookingRequestPostRequest
     */
    adultsAmount: number;
    /**
     * children amount
     * @type {number}
     * @memberof ApiBookingRequestPostRequest
     */
    childrenAmount: number;
    /**
     * customers phone
     * @type {string}
     * @memberof ApiBookingRequestPostRequest
     */
    phone?: string;
    /**
     * customers comment or question addressed to admin
     * @type {string}
     * @memberof ApiBookingRequestPostRequest
     */
    message?: string;
}

/**
 * Check if a given object implements the ApiBookingRequestPostRequest interface.
 */
export function instanceOfApiBookingRequestPostRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "dateIn" in value;
    isInstance = isInstance && "dateOut" in value;
    isInstance = isInstance && "roomNumber" in value;
    isInstance = isInstance && "adultsAmount" in value;
    isInstance = isInstance && "childrenAmount" in value;

    return isInstance;
}

export function ApiBookingRequestPostRequestFromJSON(json: any): ApiBookingRequestPostRequest {
    return ApiBookingRequestPostRequestFromJSONTyped(json, false);
}

export function ApiBookingRequestPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiBookingRequestPostRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'name': json['name'],
        'dateIn': json['dateIn'],
        'dateOut': json['dateOut'],
        'roomNumber': json['roomNumber'],
        'adultsAmount': json['adultsAmount'],
        'childrenAmount': json['childrenAmount'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function ApiBookingRequestPostRequestToJSON(value?: ApiBookingRequestPostRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'name': value.name,
        'dateIn': value.dateIn,
        'dateOut': value.dateOut,
        'roomNumber': value.roomNumber,
        'adultsAmount': value.adultsAmount,
        'childrenAmount': value.childrenAmount,
        'phone': value.phone,
        'message': value.message,
    };
}

