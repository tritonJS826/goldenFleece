/* tslint:disable */
/* eslint-disable */
/**
 * Golden Fleece API
 * A simple REST API for providing basic CRUD-access to the employees in a Golden Fleece database.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiRoomsGetRequest
 */
export interface ApiRoomsGetRequest {
    /**
     * the room's type
     * @type {string}
     * @memberof ApiRoomsGetRequest
     */
    apartmentsType: string;
    /**
     * the room's services
     * @type {string}
     * @memberof ApiRoomsGetRequest
     */
    services: string;
    /**
     * the room's ID
     * @type {string}
     * @memberof ApiRoomsGetRequest
     */
    id: string;
    /**
     * short room's description
     * @type {string}
     * @memberof ApiRoomsGetRequest
     */
    description: string;
    /**
     * the room's description
     * @type {string}
     * @memberof ApiRoomsGetRequest
     */
    descriptionLong: string;
    /**
     * the room's price
     * @type {number}
     * @memberof ApiRoomsGetRequest
     */
    price: number;
    /**
     * the room's square
     * @type {number}
     * @memberof ApiRoomsGetRequest
     */
    square: number;
    /**
     * amount of adults who can stay in the room
     * @type {number}
     * @memberof ApiRoomsGetRequest
     */
    adults: number;
    /**
     * the room's promo image URL
     * @type {string}
     * @memberof ApiRoomsGetRequest
     */
    promo: string;
    /**
     * the room's rating
     * @type {number}
     * @memberof ApiRoomsGetRequest
     */
    rating: number;
}

/**
 * Check if a given object implements the ApiRoomsGetRequest interface.
 */
export function instanceOfApiRoomsGetRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "apartmentsType" in value;
    isInstance = isInstance && "services" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "descriptionLong" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "square" in value;
    isInstance = isInstance && "adults" in value;
    isInstance = isInstance && "promo" in value;
    isInstance = isInstance && "rating" in value;

    return isInstance;
}

export function ApiRoomsGetRequestFromJSON(json: any): ApiRoomsGetRequest {
    return ApiRoomsGetRequestFromJSONTyped(json, false);
}

export function ApiRoomsGetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiRoomsGetRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apartmentsType': json['apartmentsType'],
        'services': json['services'],
        'id': json['id'],
        'description': json['description'],
        'descriptionLong': json['descriptionLong'],
        'price': json['price'],
        'square': json['square'],
        'adults': json['adults'],
        'promo': json['promo'],
        'rating': json['rating'],
    };
}

export function ApiRoomsGetRequestToJSON(value?: ApiRoomsGetRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apartmentsType': value.apartmentsType,
        'services': value.services,
        'id': value.id,
        'description': value.description,
        'descriptionLong': value.descriptionLong,
        'price': value.price,
        'square': value.square,
        'adults': value.adults,
        'promo': value.promo,
        'rating': value.rating,
    };
}

