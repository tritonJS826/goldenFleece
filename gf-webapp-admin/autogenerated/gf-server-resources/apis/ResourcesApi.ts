/* tslint:disable */
/* eslint-disable */
/**
 * Golden Fleece API
 * A simple REST API for providing basic CRUD-access to the employees in a Golden Fleece database.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

/**
 * ResourcesApi - interface
 * 
 * @export
 * @interface ResourcesApiInterface
 */
export interface ResourcesApiInterface {
    /**
     * Delete a file
     * @summary Delete a file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResourcesApiInterface
     */
    resourcesDeleteRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;

    /**
     * Delete a file
     * Delete a file
     */
    resourcesDelete(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;

    /**
     * Create a new file
     * @summary Add a new file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResourcesApiInterface
     */
    resourcesPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;

    /**
     * Create a new file
     * Add a new file
     */
    resourcesPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;

    /**
     * Update a file
     * @summary Update a file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResourcesApiInterface
     */
    resourcesPutRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;

    /**
     * Update a file
     * Update a file
     */
    resourcesPut(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;

}

/**
 * 
 */
export class ResourcesApi extends runtime.BaseAPI implements ResourcesApiInterface {

    /**
     * Delete a file
     * Delete a file
     */
    async resourcesDeleteRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Delete a file
     * Delete a file
     */
    async resourcesDelete(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.resourcesDeleteRaw(initOverrides);
        return await response.value();
    }

    /**
     * Create a new file
     * Add a new file
     */
    async resourcesPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Create a new file
     * Add a new file
     */
    async resourcesPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.resourcesPostRaw(initOverrides);
        return await response.value();
    }

    /**
     * Update a file
     * Update a file
     */
    async resourcesPutRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Update a file
     * Update a file
     */
    async resourcesPut(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.resourcesPutRaw(initOverrides);
        return await response.value();
    }

}
