openapi: 3.0.0
info:
  title: Golden Fleece API
  version: 1.0.0
  description: A simple REST API for providing basic CRUD-access to the employees
    in a Golden Fleece database.
servers:
  - url: http://localhost:3600
    description: gf-server-api
schemes:
  - http
  - https
apis:
  - ./src/routes/*.ts
paths:
  /api/ask-admin:
    post:
      tags:
        - Mail
      summary: Comment or question to admin
      description: Comment or question to admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: customers name
                email:
                  type: string
                  description: customers email
                phone:
                  type: string
                  description: customers phone
                message:
                  type: string
                  description: customers comment or question addressed to admin
              required:
                - email
                - name
                - message
              example:
                email: example@gmail.com
                name: Ivan
                phone: 379221233209
                message: Could you help me to bring my baggage
      responses:
        "200":
          description: Mail sent.
  /api/booking-request:
    post:
      tags:
        - Mail
      summary: Customer trying to book room
      description: Customer trying to book room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: customers email
                name:
                  type: string
                  description: customers name
                dateIn:
                  type: string
                  description: check in date yyyy-mm-dd
                dateOut:
                  type: string
                  description: check out date yyyy-mm-dd
                roomNumber:
                  type: number
                  description: room number
                adultsAmount:
                  type: number
                  description: adults amount
                childrenAmount:
                  type: number
                  description: children amount
                phone:
                  type: string
                  description: customers phone
                message:
                  type: string
                  description: customers comment or question addressed to admin
              required:
                - email
                - name
                - dateIn
                - dateOut
                - roomNumber
                - adultsAmount
                - childrenAmount
              example:
                email: example@gmail.com
                name: Ivan
                dateIn: 2017-01-26
                dateOut: 2017-02-12
                roomNumber: 12
                adultsAmount: 2
                childrenAmount: 1
                phone: 379221233209
                message: Could you help me to bring my baggage?
      responses:
        "200":
          description: Message sent
  /api/rooms:
    get:
      tags:
        - Rooms
      summary: Get list of rooms
      description: Retrieve a list of all rooms
      responses:
        "200":
          description: A list of rooms.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"
    post:
      tags:
        - Rooms
      summary: Add new room
      description: Add new room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewRoom"
      responses:
        "200":
          description: New room.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewRoom"
  "/api/rooms/{room_id}":
    get:
      tags:
        - Room
      summary: Get room by ID
      description: Retrieve a room by ID
      parameters:
        - name: room_id
          in: path
          description: room ID
          schema:
            type: string
          required: true
          example: 0
      responses:
        "200":
          description: Room.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
    put:
      tags:
        - Room
      summary: Update room information by ID
      description: Update room by ID
      parameters:
        - name: room_id
          in: path
          description: room ID
          schema:
            type: string
          required: true
          example: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Room"
      responses:
        "200":
          description: Room.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
    delete:
      tags:
        - Room
      summary: Delete room by ID
      description: Delete a room by ID
      parameters:
        - name: room_id
          in: path
          required: true
          description: room ID
          schema:
            type: string
          example: 0
      responses:
        "200":
          description: Successful room delete.
          content:
            application/json: {}
components:
  schemas:
    Customer:
      properties:
        id:
          type: string
          description: Customer's ID.
          example: 0
        name:
          type: string
          description: Customer's name.
          example: John
        email:
          type: string
          description: Customer's email.
          example: something@gmail.com
        phone:
          type: string
          description: Customer's phone.
          example: 12312312312
      required:
        - id
        - name
        - email
        - phone
    Currency:
      type: string
      enum:
        - GEL
    example: WiFi
    Price:
      properties:
        currency:
          type: string
          $ref: "#/components/schemas/Currency"
        amount:
          type: number
      example: 300 GEL
      required:
        - currency
        - amount
    NewRoom:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/RoomType"
        services:
          type: string[]
          items:
            $ref: "#/components/schemas/RoomServices"
          example:
            - WiFi
            - Laundry
        description:
          type: string
          description: Short room's description.
          example: A small room
        descriptionLong:
          type: string
          description: The room's description.
          example: Dressed in soothing natural colour palettes with designs inspired by
            the natural landscape...
        price:
          $ref: "#/components/schemas/Price"
          description: The room's price.
          example: 300 GEL
        square:
          type: number
          description: The room's square.
          example: 30
        adults:
          type: number
          description: Amount of adults who can stay in the room.
          example: 1
        children:
          type: number
          description: Amount of children who can stay in the room.
          example: 2
        promoImgUrl:
          type: string
          description: The room's promo image URL.
          example: https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
        images:
          type: string[]
          items:
            type: string
          example:
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
          description: The rooms slider images URL.
        rating:
          type: number
          description: The room's rating.
          example: 10
        roomNumber:
          type: number
          description: The room's number.
          example: 215
        booked:
          type: object[]
          items:
            $ref: "#/components/schemas/RoomBooked"
        paid:
          type: object[]
          items:
            $ref: "#/components/schemas/RoomPaid"
      required:
        - promoImgUrl
        - type
        - services
        - description
        - descriptionLong
        - price
        - images
        - square
        - adults
        - children
        - rating
        - roomNumber
        - booked
        - paid
    Period:
      properties:
        dateIn:
          type: string
          format: date
          description: Day of arrival.
          example: 2023-04-12
        dateOut:
          type: string
          format: date
          description: Departure day.
          example: 2023-04-15
      required:
        - dateIn
        - dateOut
    Room:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/RoomType"
        services:
          type: string[]
          items:
            $ref: "#/components/schemas/RoomServices"
          example:
            - WiFi
            - Laundry
        description:
          type: string
          description: Short room's description.
          example: A small room
        id:
          type: string
          description: The room's ID.
          example: 0
        descriptionLong:
          type: string
          description: The room's description.
          example: Dressed in soothing natural colour palettes with designs inspired by
            the natural landscape...
        price:
          $ref: "#/components/schemas/Price"
          description: The room's price.
          example: 300 GEL
        square:
          type: number
          description: The room's square.
          example: 30
        adults:
          type: number
          description: Amount of adults who can stay in the room.
          example: 1
        children:
          type: number
          description: Amount of children who can stay in the room.
          example: 2
        promoImgUrl:
          type: string
          description: The room's promo image URL.
          example: https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
        images:
          type: string[]
          items:
            type: string
          example:
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
            - https://uploads-ssl.webflow.com/5e38379f9141a20d42ea7ab3/618177a1165e33f6ca935321_506.jpg
          description: The rooms slider images URL.
        rating:
          type: number
          description: The room's rating.
          example: 10
        roomNumber:
          type: number
          description: The room's number.
          example: 215
        booked:
          type: object[]
          items:
            $ref: "#/components/schemas/RoomBooked"
        paid:
          type: object[]
          items:
            $ref: "#/components/schemas/RoomPaid"
      required:
        - promoImgUrl
        - type
        - services
        - id
        - description
        - descriptionLong
        - price
        - images
        - square
        - adults
        - children
        - rating
        - roomNumber
        - booked
        - paid
    RoomBooked:
      properties:
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        period:
          type: object
          $ref: "#/components/schemas/Period"
      required:
        - customer
        - period
    RoomPaid:
      properties:
        customer:
          type: object[]
          $ref: "#/components/schemas/Customer"
        period:
          type: object[]
          $ref: "#/components/schemas/Period"
      required:
        - customer
        - period
    RoomServices:
      type: string
      enum:
        - WiFi
        - Laundry
        - TeaCoffeeMaker
        - Heating
        - AirportShuttle
    RoomType:
      type: string
      enum:
        - Single
        - Double
        - Twin
      example: Single
tags: []
