/* tslint:disable */
/* eslint-disable */
/**
 * Golden Fleece API
 * A simple REST API for providing basic CRUD-access to the employees in a Golden Fleece database.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Customer } from './Customer';
import {
    CustomerFromJSON,
    CustomerFromJSONTyped,
    CustomerToJSON,
} from './Customer';
import type { Period } from './Period';
import {
    PeriodFromJSON,
    PeriodFromJSONTyped,
    PeriodToJSON,
} from './Period';

/**
 * 
 * @export
 * @interface RoomBooked
 */
export interface RoomBooked {
    /**
     * 
     * @type {Customer}
     * @memberof RoomBooked
     */
    customer: Customer;
    /**
     * 
     * @type {Period}
     * @memberof RoomBooked
     */
    period: Period;
}

/**
 * Check if a given object implements the RoomBooked interface.
 */
export function instanceOfRoomBooked(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "customer" in value;
    isInstance = isInstance && "period" in value;

    return isInstance;
}

export function RoomBookedFromJSON(json: any): RoomBooked {
    return RoomBookedFromJSONTyped(json, false);
}

export function RoomBookedFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomBooked {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customer': json['customer'],
        'period': json['period'],
    };
}

export function RoomBookedToJSON(value?: RoomBooked | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customer': value.customer,
        'period': value.period,
    };
}

