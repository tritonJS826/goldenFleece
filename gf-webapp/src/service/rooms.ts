import {RoomsApi} from "../../autogenerated/gf-server-api/apis/RoomsApi";
import {RoomApi} from "../../autogenerated/gf-server-api/apis/RoomApi";
import {Room} from "../model/Room";

export const getRooms = async () => {
  const roomsApi = new RoomsApi;
  const res = await roomsApi.apiRoomsGet();
  return res as Room[];
};

export const getRoomNumber = (id:string | undefined) => {
  return id && +id < 10 ? `0${Number(id) + 1}` : id;
};

export const getRoom = async (id:string) => {
  const roomApi = new RoomApi;
  const res = await roomApi.apiRoomsRoomIdGet({roomId: id});
  return res as Room;
};

export const roomInit = (room:Room) => {
  return Object.keys(room).length;
};

export const roomsInit = (rooms:Room[]) => {
  return rooms.length;
};

const shuffleArray = (array:Room[]) => {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
};

export const getRandomRooms = async(displayedRoomsCount: number, currentRoomId: string) => {
  const rooms = await getRooms();
  const shuffleRooms = shuffleArray(rooms);
  return shuffleRooms.filter((room, index) => room.id !== currentRoomId && index <= displayedRoomsCount);
};