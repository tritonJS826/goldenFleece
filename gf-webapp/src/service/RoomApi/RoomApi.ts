import {roomApi, roomsApi} from "src/service/ApiInitialization";
import {Room as RoomDTO} from "src/autogenerated/gf-server-api/models/Room";
import {Room} from "src/model/Room/Room";
import {Apartments} from "src/model/Room/Apartments";
import {Price} from "src/model/Price";
import {Currency} from "src/model/Currency";
import {ApartmentServices} from "src/model/Room/ApartmentServices";

export class RoomApiService {

  public static async getAllRooms() {
    const roomsRaw: RoomDTO[] = await roomsApi.apiRoomsGet();

    const rooms: Room[] = roomsRaw.map(room => ({
      ...room,
      price: new Price(Currency[room.price.currency], room.price.amount),
      apartmentsType: Apartments[room.apartmentsType],
      services: room.services.map((service) => ApartmentServices[service]),
    }));

    return rooms;
  }

  public static async getRoomById(roomId: string) {
    const roomDTO: RoomDTO = await roomApi.apiRoomsRoomIdGet({roomId});

    const room: Room = {
      ...roomDTO,
      price: new Price(Currency[roomDTO.price.currency], roomDTO.price.amount),
      apartmentsType: Apartments[roomDTO.apartmentsType],
      services: roomDTO.services.map((service) => ApartmentServices[service]),
    };

    return room;
  }

}