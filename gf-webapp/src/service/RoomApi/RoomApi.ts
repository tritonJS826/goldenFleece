import {roomApi, roomsApi} from "src/service/ApiInitialization";
import {Room as RoomDTO} from "src/autogenerated/gf-server-api/models/Room";
import {Room} from "src/model/Room/Room";
import {Apartments} from "src/model/Room/Apartments";
import {ApartmentServices} from "src/model/Room/ApartmentServices";
import {Price} from "src/model/Price";
import {Currency} from "src/model/Currency";

export class RoomApiService {

  public static async getAllRooms() {
    const roomsRaw: RoomDTO[] = await roomsApi.apiRoomsGet();

    const rooms: Room[] = roomsRaw.map(room => ({
      ...room,
      price: new Price(Currency.GEL, room.price.amount),
      images: room.images,
      promoImgUrl: room.promoImgUrl,
      apartmentsType: Apartments[room.apartmentsType],
      services: room.services as ApartmentServices[],
      id: room.id,
      description: room.description,
      descriptionLong: room.descriptionLong,
      square: room.square,
      adults: room.adults,
      rating: room.rating,
    }));

    return rooms;
  }

  public static async getRoomById(roomId: string) {
    const roomDTO: RoomDTO = await roomApi.apiRoomsRoomIdGet({roomId});

    const room: Room = {
      ...roomDTO,
      price: new Price(Currency.GEL, roomDTO.price.amount),
      images: roomDTO.images,
      promoImgUrl: roomDTO.promoImgUrl,
      apartmentsType: Apartments[roomDTO.apartmentsType],
      services: roomDTO.services as ApartmentServices[],
      id: roomDTO.id,
      description: roomDTO.description,
      descriptionLong: roomDTO.descriptionLong,
      square: roomDTO.square,
      adults: roomDTO.adults,
      rating: roomDTO.rating,
    };

    return room;
  }

}