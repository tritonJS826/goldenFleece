import {roomApi, roomsApi} from "src/service/ApiInitialization";
import {Room as RoomDTO} from "src/autogenerated/gf-server-api/models/Room";
import {Room} from "src/model/Room/Room";
import {RoomType} from "src/model/Room/RoomType";
import {Price} from "src/model/Room/Price";
import {Currency} from "src/model/Room/Currency";
import {RoomServices} from "src/model/Room/RoomServices";

const roomDTOToBusinessConverter = (roomRaw: RoomDTO) => new Room({
  ...roomRaw,
  price: new Price(Currency[roomRaw.price.currency], roomRaw.price.amount),
  type: RoomType[roomRaw.type],
  services: roomRaw.services.map((service) => RoomServices[service]),
});

export class RoomApiService {

  public static async getAllRooms() {
    const roomsRaw: RoomDTO[] = await roomsApi.apiRoomsGet();
    const rooms = roomsRaw.map(roomDTOToBusinessConverter);
    return rooms;
  }

  public static async getRoomById(id: string) {
    const roomRaw: RoomDTO = await roomApi.apiRoomsRoomIdGet({roomId: id});
    const room = roomDTOToBusinessConverter(roomRaw);
    return room;
  }

}
