import React, {useState, useRef} from "react";
import {useModalVisibilityContext, useDictionary} from "../../DictionaryContext/useDictionary";
import {MailApiService} from "src/service/MailApi/MailApi";
import {ApiBookingRequestPostRequest} from "src/autogenerated/gf-server-api/models/ApiBookingRequestPostRequest";
import {Button} from "gf-ui-lib/components/Button/Button";
import styles from "./Form.module.scss";

type RoomProps = {
  roomNumber: string | null;
}

const defaultBookingFormData: ApiBookingRequestPostRequest = {
  email: "",
  name: "",
  dateIn: "",
  dateOut: "",
  roomNumber: 0,
  adultsAmount: 0,
  childrenAmount: 0,
};

export const Form = (props: RoomProps) => {
  const {bookingRoomForm} = useDictionary().dictionary;
  const {isModalActive, setIsModalActive} = useModalVisibilityContext();
  const [bookingFormData, setBookingFormData] = useState<ApiBookingRequestPostRequest>(defaultBookingFormData);

  const sendMail = async () => {
    const res = await MailApiService.bookingMessage({apiBookingRequestPostRequest: bookingFormData});
  };

  const onSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {
    e.preventDefault();
    setBookingFormData(defaultBookingFormData);
    setIsModalActive(false);
    await sendMail();
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setBookingFormData({...bookingFormData, [e.target.name]: e.target.value});
  };

  const handleChangeRoom = (e: React.ChangeEvent<HTMLInputElement>) => {
    setBookingFormData({...bookingFormData, [e.target.name]: props.roomNumber});
  };

  const formToSubmit = useRef<HTMLFormElement>(null);

  return (
    <div>
      <form
        onSubmit={onSubmit}
        ref={formToSubmit}
        className={styles.form}
      >
        <div className={styles.formGoup}>
          <label
            className={styles.label}
            htmlFor="email"
          >
            {bookingRoomForm.email}
          </label>
          <input
            type="email"
            className={styles.input}
            id="email"
            placeholder={bookingRoomForm.email}
            name="email"
            value={bookingFormData.email}
            onChange={handleChange}
            required
          />
        </div>
        <div className={styles.formGoup}>
          <label
            className={styles.label}
            htmlFor="text"
          >
            {bookingRoomForm.name}
          </label>
          <input
            type="text"
            className={styles.input}
            id="text"
            placeholder={bookingRoomForm.name}
            name="name"
            value={bookingFormData.name}
            onChange={handleChange}
            required
          />
        </div>
        <div className={styles.row}>
          <div className={styles.formGoup}>
            <label
              className={styles.label}
              htmlFor="dateIn"
            >
              {bookingRoomForm.dateIn}
            </label>
            <input
              type="date"
              className={styles.input2}
              id="dateIn"
              name="dateIn"
              value={bookingFormData.dateIn}
              onChange={handleChange}
              required
            />
          </div>
          <div className={styles.formGoup}>
            <label
              className={styles.label}
              htmlFor="dateOut"
            >
              {bookingRoomForm.dateOut}
            </label>
            <input
              type="date"
              className={styles.input2}
              id="dateOut"
              name="dateOut"
              value={bookingFormData.dateOut}
              onChange={handleChange}
            />
          </div>
        </div>
        <div className={styles.row}>
          <div className={styles.formGroup}>
            <label
              className={styles.label}
              htmlFor="rooms"
            >
              {bookingRoomForm.roomNumber}
            </label>
            <input
              type="text"
              className={styles.input}
              id="rooms"
              name="roomNumber"
              placeholder={props.roomNumber ?? undefined}
              value={bookingFormData.roomNumber}
              onChange={handleChangeRoom}
              required
            />
          </div>
          <div className={styles.row}>
            <div className={styles.formGroup}>
              <label
                className={styles.label}
                htmlFor="adults"
              >
                {bookingRoomForm.adultsAmount}
              </label>
              <input
                type="text"
                className={styles.input}
                id="adults"
                name="adultsAmount"
                value={bookingFormData.adultsAmount}
                onChange={handleChange}
                required
              />
            </div>
          </div>
          <div className={styles.row}>
            <div className={styles.formGroup}>
              <label
                className={styles.label}
                htmlFor="children"
              >
                {bookingRoomForm.childrenAmount}
              </label>
              <input
                type="text"
                className={styles.input}
                id="children"
                name="childrenAmount"
                value={bookingFormData.childrenAmount}
                onChange={handleChange}
                required
              />
            </div>
          </div>
        </div>
        <Button
          onClick={() => formToSubmit?.current?.submit()}
          value={bookingRoomForm.buttonText}
        />
      </form>
    </div>
  );
};