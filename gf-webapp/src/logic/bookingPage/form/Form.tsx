import {useState} from "react";
import {useModalVisibilityContext, useDictionary} from "src/logic/DictionaryContext/useDictionary";
import {MailApiService} from "src/service/MailApi/MailApi";
import {ApiBookingRequestPostRequest} from "src/../autogenerated/gf-server-api/models/ApiBookingRequestPostRequest";
import {Button} from "gf-ui-lib/components/Button/Button";
import styles from "src/logic/bookingPage/form/Form.module.scss";

type RoomProps = {
  roomNumber: string | null;
}

const defaultBookingFormData: ApiBookingRequestPostRequest = {
  email: "",
  name: "",
  dateIn: "",
  dateOut: "",
  roomNumber: 0,
  adultsAmount: 0,
  childrenAmount: 0,
};

export const Form = (props: RoomProps) => {
  const {bookingRoomForm} = useDictionary().dictionary;
  const {isModalActive, setIsModalActive} = useModalVisibilityContext();
  const [bookingFormData, setBookingFormData] = useState<ApiBookingRequestPostRequest>(defaultBookingFormData);

  const sendMail = async () => {
    const res = await MailApiService.bookingMessage({apiBookingRequestPostRequest: bookingFormData});
  };

  const onSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {
    e.preventDefault();
    setIsModalActive(false);
    await sendMail();
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setBookingFormData({...bookingFormData, [e.target.name]: e.target.value});
  };

  const handleChangeRoom = (e: React.ChangeEvent<HTMLInputElement>) => {
    setBookingFormData({...bookingFormData, [e.target.name]: props.roomNumber});
  };

  return (
    <div>
      <form
        onSubmit={onSubmit}
        className={styles.form}
      >
        <div className={styles.formGoup}>
          <label className={styles.label}>
            {bookingRoomForm.email}
            <input
              type="email"
              className={styles.input}
              placeholder={bookingRoomForm.email}
              name="email"
              value={bookingFormData.email}
              onChange={handleChange}
              required
            />
          </label>
        </div>
        <div className={styles.formGoup}>
          <label className={styles.label}>
            {bookingRoomForm.name}
            <input
              type="text"
              className={styles.input}
              placeholder={bookingRoomForm.name}
              name="name"
              value={bookingFormData.name}
              onChange={handleChange}
              required
            />
          </label>
        </div>
        <div className={styles.row}>
          <div className={styles.formGoup}>
            <label className={styles.label}>
              {bookingRoomForm.dateIn}
              <input
                type="date"
                className={styles.input2}
                name="dateIn"
                value={bookingFormData.dateIn}
                onChange={handleChange}
                required
              />
            </label>
          </div>
          <div className={styles.formGoup}>
            <label className={styles.label}>
              {bookingRoomForm.dateOut}
              <input
                type="date"
                className={styles.input2}
                name="dateOut"
                value={bookingFormData.dateOut}
                onChange={handleChange}
              />
            </label>
          </div>
        </div>
        <div className={styles.row}>
          <div className={styles.formGroup}>
            <label className={styles.label}>
              {bookingRoomForm.roomNumber}
              <input
                type="text"
                className={styles.input}
                name="roomNumber"
                placeholder={props.roomNumber ?? undefined}
                value={bookingFormData.roomNumber}
                onChange={handleChangeRoom}
                required
              />
            </label>
          </div>
          <div className={styles.row}>
            <div className={styles.formGroup}>
              <label className={styles.label}>
                {bookingRoomForm.adultsAmount}
                <input
                  type="text"
                  className={styles.input}
                  name="adultsAmount"
                  value={bookingFormData.adultsAmount}
                  onChange={handleChange}
                  required
                />
              </label>
            </div>
          </div>
          <div className={styles.row}>
            <div className={styles.formGroup}>
              <label className={styles.label}>
                {bookingRoomForm.childrenAmount}
                <input
                  type="text"
                  className={styles.input}
                  name="childrenAmount"
                  value={bookingFormData.childrenAmount}
                  onChange={handleChange}
                  required
                />
              </label>
            </div>
          </div>
        </div>
        <Button
          type="submit"
          onClick={() => onSubmit}
          value={bookingRoomForm.buttonText}
        />
      </form>
    </div>
  );
};