/* tslint:disable */
/* eslint-disable */
/**
 * Golden Fleece API
 * A simple REST API for providing basic CRUD-access to the employees in a Golden Fleece database.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiAskAdminPostRequest
 */
export interface ApiAskAdminPostRequest {
    /**
     * customers name
     * @type {string}
     * @memberof ApiAskAdminPostRequest
     */
    name: string;
    /**
     * customers email
     * @type {string}
     * @memberof ApiAskAdminPostRequest
     */
    email: string;
    /**
     * customers phone
     * @type {string}
     * @memberof ApiAskAdminPostRequest
     */
    phone?: string;
    /**
     * customers comment or question addressed to admin
     * @type {string}
     * @memberof ApiAskAdminPostRequest
     */
    message: string;
}

/**
 * Check if a given object implements the ApiAskAdminPostRequest interface.
 */
export function instanceOfApiAskAdminPostRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "message" in value;

    return isInstance;
}

export function ApiAskAdminPostRequestFromJSON(json: any): ApiAskAdminPostRequest {
    return ApiAskAdminPostRequestFromJSONTyped(json, false);
}

export function ApiAskAdminPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiAskAdminPostRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'email': json['email'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'message': json['message'],
    };
}

export function ApiAskAdminPostRequestToJSON(value?: ApiAskAdminPostRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'email': value.email,
        'phone': value.phone,
        'message': value.message,
    };
}

